#!/usr/bin/env bash
# this file contains local changes to .bashrc

# os specific options
case "$(uname)" in
Darwin*)
    ls_colors='-G'
    ;;
Linux*)
    ls_colors='--color=auto'
    ;;
esac

# aliases
alias ls="$(which ls) ${ls_colors}"
alias ll="ls -lF"
alias la="ls -A"
alias l="ls -F"

alias grep="grep --color=auto -E"
alias rgrep="grep -RHn"
alias fgrep="grep -F"

alias pgit='git --no-pager'

alias man='MANWIDTH=$((COLUMNS > 80 ? 80 : COLUMNS)) man'

# docker
alias dc='docker-compose'
alias dr='docker run -ti -v $PWD:$PWD -w $PWD "$@"'
alias dp='docker pull'
alias k='kubectl'

# netflix
alias metacurl='curl -k --cacert ~/.metatron/metatronClient.trust.pem --cert ~/.metatron/user.crt --key ~/.metatron/user.key'
alias bionicbase='dr -v $HOME/.metatron:/run/metatron -v $HOME/.metatron:/metatron --entrypoint /bin/bash dockerregistry.test.netflix.net:7002/baseos/bionic'
alias xenialbase='dr --entrypoint /bin/bash dockerregistry.test.netflix.net:7002/engtools/xenialbase'

alias nerd='vim +NERDTree'

if ! which realpath &>/dev/null ; then
    alias realpath="perl -MCwd=realpath -E '\$_=realpath shift;-e && say'"
fi

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# unlimited history size in memory and on disk
HISTSIZE=
HISTFILESIZE=

# store history constantly
PROMPT_COMMAND="${PROMPT_COMMAND:-:};history -a"

export EDITOR=vim

PATH=$HOME/bin:$HOME/go/bin:$PATH

if [[ $(uname) == "Darwin" ]]; then
    source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
    source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=true
    GIT_PS1_DESCRIBE_STYLE=branch
fi

if [[ $(type -t __git_ps1) != function ]]; then
    function __git_ps1 {
        echo ""
    }
fi

right="\$(date +'%l:%M%P')"
left="\[$(tput setaf 4)\]\w\$(__git_ps1 ' \[$(tput bold && tput setaf 5)\]⑂ \[$(tput sgr0 && tput setaf 8)\]%s')"
prompt="\[$(tput bold && tput setaf $( [[ $EUID -eq 0 ]] && echo 3 || echo 6 ))\]↦\[$(tput sgr0)\] " 
PS1="\[\e]0;\w\a\]\$(printf '\n\[$(tput setaf 13)\]%*s\[$(tput sgr0)\]\r%s\n%s' \"\$(tput cols)\" \"$right\" \"$left\" \"$prompt\" )"

# [[ -n "$TMUX" ]] && PROMPT_COMMAND="${PROMPT_COMMAND};tmux set-window-option automatic-rename on >/dev/null"
