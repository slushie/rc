# sensible defaults
set -g utf8 on                      # console encoding is utf8
set -g status-utf8 on               # status bars use utf8
set -g history-limit 50000          # larger history size
set -g display-time 4000            # display tmux messages for 4 seconds
set -g status-keys emacs            # apparently this is more sane

# tell everyone we support 256 colors
set -g default-terminal "screen-256color"


# use backtick as convenient prefix
unbind C-b
set-option -g prefix `

# bindings
bind -n C-k clear-history           # C-k with no prefix to clear history
bind R source-file ~/.tmux.conf     # source .tmux.conf as suggested in `man tmux`
bind | split-window -h              # split horizontally, mnemonically
bind - split-window -v              # split vertically, mnemonically
bind ` send-prefix                  # press prefix twice to make it literal
bind -r Left previous-window        # prev
bind BSpace previous-window         # prev
bind -r Right next-window           # next
bind Space next-window              # next

# start counting from 1
set-option -g base-index 1

# i wish i could use the clock as a screen saver
set-window-option -g clock-mode-style 12

# xterm window title
set-option -g set-titles on
set-option -g set-titles-string "[#h] #W"

# status commands
set-environment -g _free_mem_cmd 'if [ $(uname) = Darwin ]; then echo $(expr $(vm_stat | awk "/free/ {gsub(/\\./, \"\", \$3); print \$3}") \* 4096 / 1048576)MB; else free -mh | awk "/buffers.cache/ {print \$4}" ; fi'
set-environment -g _load_avg_cmd 'if [ $(uname) = Darwin ]; then echo $(sysctl -n vm.loadavg | awk "{print \$2}") ; else cat /proc/loadavg | cut -d" " -f1 ; fi'
set-environment -g _pane_title_cmd 'tmux display-message -p "#T" | perl -pE "\$t = \$_; \$_ = substr \$_, -20; s,^.,â€¦,, unless \$t eq \$_ "'

# fancy status
set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-interval 10
set -g status-justify left
set -g status-left "[#I.#P #[fg=red]#h#[default]]"
set -g status-right "#[fg=cyan]#(eval \$_pane_title_cmd) #[default][#[fg=yellow]#4(eval \$_load_avg_cmd) #[fg=green]#(eval \$_free_mem_cmd)#[default]]"
set -g status-left-length 20
set -g status-right-length 35

# Window status colors
set-window-option -g window-status-current-format "[#I #W]"
set-window-option -g window-status-current-attr reverse
set-window-option -g window-status-format "[#I#F#W]"

# enable mouse features for terminals that support it
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
